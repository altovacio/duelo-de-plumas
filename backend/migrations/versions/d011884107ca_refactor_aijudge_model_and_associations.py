"""Refactor AIJudge model and associations

Revision ID: d011884107ca
Revises: f4a377a1616a
Create Date: 2025-05-02 20:03:38.277874

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd011884107ca'
down_revision: Union[str, None] = 'f4a377a1616a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_judge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('ai_personality_prompt', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ai_judge', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ai_judge_name'), ['name'], unique=True)

    op.create_table('contest_ai_judges',
    sa.Column('ai_judge_id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.Column('ai_model', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['ai_judge_id'], ['ai_judge.id'], ),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], ),
    sa.PrimaryKeyConstraint('ai_judge_id', 'contest_id')
    )
    op.create_table('contest_human_judges',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'contest_id')
    )
    op.drop_table('contest_judges')
    with op.batch_alter_table('ai_writing_request', schema=None) as batch_op:
        batch_op.drop_index('ix_ai_writing_request_timestamp')

    op.drop_table('ai_writing_request')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('ai_personality_prompt')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ai_personality_prompt', sa.TEXT(), nullable=True))

    op.create_table('ai_writing_request',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('contest_id', sa.INTEGER(), nullable=False),
    sa.Column('ai_writer_id', sa.INTEGER(), nullable=False),
    sa.Column('ai_model', sa.VARCHAR(length=50), nullable=False),
    sa.Column('full_prompt', sa.TEXT(), nullable=False),
    sa.Column('response_text', sa.TEXT(), nullable=False),
    sa.Column('prompt_tokens', sa.INTEGER(), nullable=False),
    sa.Column('completion_tokens', sa.INTEGER(), nullable=False),
    sa.Column('cost', sa.FLOAT(), nullable=False),
    sa.Column('submission_id', sa.INTEGER(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('app_version', sa.VARCHAR(length=10), nullable=False),
    sa.ForeignKeyConstraint(['ai_writer_id'], ['ai_writer.id'], ),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ai_writing_request', schema=None) as batch_op:
        batch_op.create_index('ix_ai_writing_request_timestamp', ['timestamp'], unique=False)

    op.create_table('contest_judges',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('contest_id', sa.INTEGER(), nullable=False),
    sa.Column('ai_model', sa.VARCHAR(length=50), nullable=True),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'contest_id')
    )
    op.drop_table('contest_human_judges')
    op.drop_table('contest_ai_judges')
    with op.batch_alter_table('ai_judge', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_judge_name'))

    op.drop_table('ai_judge')
    # ### end Alembic commands ###
