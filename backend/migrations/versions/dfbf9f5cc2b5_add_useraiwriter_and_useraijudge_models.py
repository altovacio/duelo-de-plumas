"""Add UserAIWriter and UserAIJudge models

Revision ID: dfbf9f5cc2b5
Revises: 826760318eb7
Create Date: 2025-05-03 22:02:51.572822

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dfbf9f5cc2b5'
down_revision: Union[str, None] = '826760318eb7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_ai_judge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('personality_prompt', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_user_ai_judge_owner_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_ai_judge')),
    sa.UniqueConstraint('owner_id', 'name', name='uq_user_ai_judge_owner_name')
    )
    with op.batch_alter_table('user_ai_judge', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_ai_judge_owner_id'), ['owner_id'], unique=False)

    op.create_table('user_ai_writer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('personality_prompt', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_user_ai_writer_owner_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_ai_writer')),
    sa.UniqueConstraint('owner_id', 'name', name='uq_user_ai_writer_owner_name')
    )
    with op.batch_alter_table('user_ai_writer', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_ai_writer_owner_id'), ['owner_id'], unique=False)

    with op.batch_alter_table('contest', schema=None) as batch_op:
        batch_op.alter_column('creator_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('contest', schema=None) as batch_op:
        batch_op.alter_column('creator_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('user_ai_writer', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_ai_writer_owner_id'))

    op.drop_table('user_ai_writer')
    with op.batch_alter_table('user_ai_judge', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_ai_judge_owner_id'))

    op.drop_table('user_ai_judge')
    # ### end Alembic commands ###
