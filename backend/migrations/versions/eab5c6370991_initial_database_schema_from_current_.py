"""Initial database schema from current models

Revision ID: eab5c6370991
Revises: 
Create Date: 2025-05-02 23:48:35.368779

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eab5c6370991'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_judge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('ai_personality_prompt', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_judge'))
    )
    with op.batch_alter_table('ai_judge', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ai_judge_name'), ['name'], unique=True)

    op.create_table('ai_writer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('personality_prompt', sa.Text(), nullable=False),
    sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_writer'))
    )
    with op.batch_alter_table('ai_writer', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ai_writer_created_date'), ['created_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_ai_writer_name'), ['name'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('judge_type', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('contest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('contest_type', sa.String(length=10), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('required_judges', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], name=op.f('fk_contest_creator_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contest'))
    )
    with op.batch_alter_table('contest', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_contest_creator_id'), ['creator_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_contest_status'), ['status'], unique=False)

    op.create_table('ai_evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.Column('judge_id', sa.Integer(), nullable=False),
    sa.Column('ai_model', sa.String(length=50), nullable=False),
    sa.Column('full_prompt', sa.Text(), nullable=False),
    sa.Column('response_text', sa.Text(), nullable=False),
    sa.Column('prompt_tokens', sa.Integer(), nullable=False),
    sa.Column('completion_tokens', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('app_version', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], name=op.f('fk_ai_evaluation_contest_id_contest')),
    sa.ForeignKeyConstraint(['judge_id'], ['user.id'], name=op.f('fk_ai_evaluation_judge_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_evaluation'))
    )
    with op.batch_alter_table('ai_evaluation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ai_evaluation_timestamp'), ['timestamp'], unique=False)

    op.create_table('contest_ai_judges',
    sa.Column('ai_judge_id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.Column('ai_model', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['ai_judge_id'], ['ai_judge.id'], name=op.f('fk_contest_ai_judges_ai_judge_id_ai_judge')),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], name=op.f('fk_contest_ai_judges_contest_id_contest')),
    sa.PrimaryKeyConstraint('ai_judge_id', 'contest_id', name=op.f('pk_contest_ai_judges'))
    )
    op.create_table('contest_human_judges',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], name=op.f('fk_contest_human_judges_contest_id_contest')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_contest_human_judges_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'contest_id', name=op.f('pk_contest_human_judges'))
    )
    op.create_table('submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('author_name', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('text_content', sa.Text(), nullable=False),
    sa.Column('submission_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.Column('total_points', sa.Integer(), nullable=False),
    sa.Column('final_rank', sa.Integer(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=False),
    sa.Column('ai_writer_id', sa.Integer(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ai_writer_id'], ['ai_writer.id'], name=op.f('fk_submission_ai_writer_id_ai_writer')),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], name=op.f('fk_submission_contest_id_contest')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_submission_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_submission'))
    )
    with op.batch_alter_table('submission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_submission_submission_date'), ['submission_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_submission_user_id'), ['user_id'], unique=False)

    op.create_table('ai_writing_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.Column('ai_writer_id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('ai_model', sa.String(length=50), nullable=False),
    sa.Column('full_prompt', sa.Text(), nullable=True),
    sa.Column('response_text', sa.Text(), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('app_version', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['ai_writer_id'], ['ai_writer.id'], name=op.f('fk_ai_writing_request_ai_writer_id_ai_writer')),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], name=op.f('fk_ai_writing_request_contest_id_contest')),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'], name=op.f('fk_ai_writing_request_submission_id_submission')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_writing_request')),
    sa.UniqueConstraint('submission_id', name=op.f('uq_ai_writing_request_submission_id'))
    )
    with op.batch_alter_table('ai_writing_request', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ai_writing_request_timestamp'), ['timestamp'], unique=False)

    op.create_table('vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('place', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('judge_id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('app_version', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['judge_id'], ['user.id'], name=op.f('fk_vote_judge_id_user')),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'], name=op.f('fk_vote_submission_id_submission')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vote'))
    )
    with op.batch_alter_table('vote', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vote_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vote', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vote_timestamp'))

    op.drop_table('vote')
    with op.batch_alter_table('ai_writing_request', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_writing_request_timestamp'))

    op.drop_table('ai_writing_request')
    with op.batch_alter_table('submission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_submission_user_id'))
        batch_op.drop_index(batch_op.f('ix_submission_submission_date'))

    op.drop_table('submission')
    op.drop_table('contest_human_judges')
    op.drop_table('contest_ai_judges')
    with op.batch_alter_table('ai_evaluation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_evaluation_timestamp'))

    op.drop_table('ai_evaluation')
    with op.batch_alter_table('contest', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contest_status'))
        batch_op.drop_index(batch_op.f('ix_contest_creator_id'))

    op.drop_table('contest')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_role'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('ai_writer', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_writer_name'))
        batch_op.drop_index(batch_op.f('ix_ai_writer_created_date'))

    op.drop_table('ai_writer')
    with op.batch_alter_table('ai_judge', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_judge_name'))

    op.drop_table('ai_judge')
    # ### end Alembic commands ###
